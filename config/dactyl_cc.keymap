#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// LAYERS
#define DEFAULT 0
#define CHAR_LAYER 1
#define NUM_LAYER 2
#define ARROW_LAYER 3


/ {
    keymap {
        compatible = "zmk,keymap"; 

        default_layer {
            bindings = <
&kp ESC    &kp Q     &kp W     &kp E     &kp R     &kp T                              &kp Y     &kp U     &kp I       &kp O     &kp P      &kp BACKSPACE
&kp TAB    &kp A     &kp S     &kp D     &kp F     &kp G                              &kp H     &kp J     &kp K       &kp L     &kp SEMI   &kp SQT
&kp LCTRL  &kp Z     &kp X     &kp C     &kp V     &kp B                              &kp N     &kp M     &kp COMMA   &kp DOT   &kp FSLH   &kp ENTER
                     &kp C_PP  &kp LWIN                                                                   &kp C_VOL_DN  &kp C_VOL_UP

                            &kp LCTRL   &kp LALT   &mo CHAR_LAYER                    &mo NUM_LAYER   &mo ARROW_LAYER   &kp ENTER
                                 &kp LSHIFT    &kp DEL                                      &kp BACKSPACE    &kp SPACE
            >;
        };

        char_layer {
            bindings = <
&kp GRAVE  &none      &none     &none      &none     &kp CARET                     &none     &none      &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp MINUS  &kp PLUS
&none      &kp EXCL   &kp AT    &kp HASH   &kp DLLR  &kp PERCENT                   &kp AMPS  &kp ASTRK  &kp LPAR        &kp RPAR         &kp EQUAL  &kp TILDE
&none      &none      &none     &none      &none     &none                         &none     &kp UNDER  &kp LBKT        &kp RBKT         &none      &none
                      &none     &none                                                                   &none           &none

                            &kp LCTRL   &kp LALT   &mo CHAR_LAYER                    &mo NUM_LAYER   &mo ARROW_LAYER   &kp ENTER
                                 &kp LSHIFT    &kp DEL                                      &kp BACKSPACE    &kp SPACE
            >;
        };

        num_layer {
            bindings = <
&bt BT_SEL 0  &kp F9   &kp F10     &kp F11    &kp F12   &none                     &none    &kp N7    &kp N8    &kp N9    &none    &none
&bt BT_SEL 1  &kp F5   &kp F6      &kp F7     &kp F8    &none                     &none    &kp N4    &kp N5    &kp N6    &none    &none
&bt BT_SEL 2  &kp F1   &kp F2      &kp F3     &kp F4    &none                     &kp N0   &kp N1    &kp N2    &kp N3    &none    &none
                       &bt BT_CLR  &none                                                   &kp N0    &none

                            &kp LCTRL   &kp LALT   &mo CHAR_LAYER                    &mo NUM_LAYER   &mo ARROW_LAYER   &kp ENTER
                                 &kp LSHIFT    &kp DEL                                      &kp BACKSPACE    &kp SPACE
            >;
        };

        arrow_layer {
            bindings = <
&none  &none   &none   &none   &none   &none                   &none      &none      &kp UP     &none    &none     &none
&none        &none   &none   &none   &none   &none                   &kp HOME   &kp LEFT   &kp DOWN   &kp RIGHT   &kp END   &none
&none        &none   &none   &none   &none   &none                   &none      &none      &kp UP     &none    &none     &none
                     &none   &none                                                         &none      &none

                            &kp LCTRL   &kp LALT   &mo CHAR_LAYER                    &mo NUM_LAYER   &mo ARROW_LAYER   &kp ENTER
                                 &kp LSHIFT    &kp DEL                                      &kp BACKSPACE    &kp SPACE
            >;
        };
    };
};